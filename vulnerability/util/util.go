package util

import (
	"errors"
	"strings"
	"time"
)

// Contains error codes for authentication service.
var (
	ErrInvalidCVEId          = errors.New("invalid cve id")
	ErrEmptyCVEId            = errors.New("cve id can't be empty")
	ErrExistCVE              = errors.New("cve already exist")
	ErrNotFoundCVE           = errors.New("cve could not be found")
	ErrAddCVE                = errors.New("cve could not be created")
	ErrDeleteCVE             = errors.New("cve could not be deleted")
	ErrUpdateCVE             = errors.New("cve could not be updated")
	ErrNotPerformedOperation = errors.New("operation could not be performed")
)

// ValidateCVEId validates the CVE id.
func ValidateCVEId(cveId string) (string, error) {
	cveId = NormalizeCVEId(cveId)

	if cveId == "" {
		return "", ErrEmptyCVEId
	}

	//TODO: Check CVE id is real or not

	return cveId, nil
}

// NormalizeCVEId normalizes the CVE id.
func NormalizeCVEId(cveId string) string {
	return strings.TrimSpace(cveId)
}

func ParseTime(dateStr string) time.Time {
	layout := "2006-01-02T15:04:05.000"
	t, err := time.Parse(layout, dateStr)
	if err != nil {
		return time.Time{}
	}
	return t
}

func FormatTime(t time.Time) string {
	layout := "2006-01-02T15:04:05.000"
	return t.Format(layout)
}
