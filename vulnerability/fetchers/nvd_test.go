package fetchers

import (
	"testing"
	"time"

	"github.com/mtnmunuklu/bavul/vulnerability/util"
)

func TestNVDFetcher(t *testing.T) {
	// Create an instance of NVDFetcher for testing.
	fetcher := NewNVDFetcher("your-api-key-here") // Replace the API key here.

	// Test the FetchCVEData function.
	t.Run("TestFetchCVEData", func(t *testing.T) {
		data, err := fetcher.FetchCVEData()
		if err != nil {
			t.Errorf("Error: %v", err)
		}
		if len(data.CVEItems) == 0 {
			t.Errorf("Error: Data could not be fetched")
		}
	})

	// Test the ConvertNvdDataToCVE function.
	t.Run("TestConvertNvdDataToCVE", func(t *testing.T) {
		data, err := fetcher.FetchCVEData()
		if err != nil {
			t.Errorf("Error: %v", err)
		}
		cves := fetcher.ConvertNvdDataToCVE(data)
		if len(cves) == 0 {
			t.Errorf("Error: CVE data not converted")
		}
	})

	// You can test other functions here.
}

func TestParseTime(t *testing.T) {
	// Test a valid RFC3339 time.
	t.Run("TestValidTime", func(t *testing.T) {
		dateStr := "2023-09-24T12:34:56Z"
		tm := util.ParseTime(dateStr)
		expected := time.Date(2023, time.September, 24, 12, 34, 56, 0, time.UTC)
		if !tm.Equal(expected) {
			t.Errorf("Expected: %v, Got: %v", expected, tm)
		}
	})

	// Test an invalid RFC3339 time.
	t.Run("TestInvalidTime", func(t *testing.T) {
		dateStr := "invalid-time"
		tm := util.ParseTime(dateStr)
		if !tm.IsZero() {
			t.Errorf("Expected: Zero time, Got: %v", tm)
		}
	})
}
